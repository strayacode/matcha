#pragma once

#include "ee_core.h"

namespace EEInterpreter {
    void mfc0(EECore& cpu, CPUInstruction inst);
    void sll(EECore& cpu, CPUInstruction inst);
    void slti(EECore& cpu, CPUInstruction inst);
    void bne(EECore& cpu, CPUInstruction inst);
    void lui(EECore& cpu, CPUInstruction inst);
    void ori(EECore& cpu, CPUInstruction inst);
    void jr(EECore& cpu, CPUInstruction inst);
    void mtc0(EECore& cpu, CPUInstruction inst);
    void sync(EECore& cpu, CPUInstruction inst);
    void addiu(EECore& cpu, CPUInstruction inst);
    void sw(EECore& cpu, CPUInstruction inst);
    void tlbwi(EECore& cpu, CPUInstruction inst);
    void jalr(EECore& cpu, CPUInstruction inst);
    void sd(EECore& cpu, CPUInstruction inst);
    void daddu(EECore& cpu, CPUInstruction inst);
    void jal(EECore& cpu, CPUInstruction inst);
    void andi(EECore& cpu, CPUInstruction inst);
    void beq(EECore& cpu, CPUInstruction inst);
    void orr(EECore& cpu, CPUInstruction inst);
    void mult(EECore& cpu, CPUInstruction inst);
    void divu(EECore& cpu, CPUInstruction inst);
    void beql(EECore& cpu, CPUInstruction inst);
    void break_exception(EECore& cpu, CPUInstruction inst);
    void mflo(EECore& cpu, CPUInstruction inst);
    void sltiu(EECore& cpu, CPUInstruction inst);
    void bnel(EECore& cpu, CPUInstruction inst);
    void srl(EECore& cpu, CPUInstruction inst);
    void lb(EECore& cpu, CPUInstruction inst);
    void swc1(EECore& cpu, CPUInstruction inst);
    void lbu(EECore& cpu, CPUInstruction inst);
    void sra(EECore& cpu, CPUInstruction inst);
    void ld(EECore& cpu, CPUInstruction inst);
    void j(EECore& cpu, CPUInstruction inst);
    void lw(EECore& cpu, CPUInstruction inst);
    void sb(EECore& cpu, CPUInstruction inst);
    void blez(EECore& cpu, CPUInstruction inst);
    void slt(EECore& cpu, CPUInstruction inst);
    void addu(EECore& cpu, CPUInstruction inst);
    void sltu(EECore& cpu, CPUInstruction inst);
    void andd(EECore& cpu, CPUInstruction inst);
    void bgez(EECore& cpu, CPUInstruction inst);
    void lhu(EECore& cpu, CPUInstruction inst);
    void movn(EECore& cpu, CPUInstruction inst);
    void subu(EECore& cpu, CPUInstruction inst);
    void bltz(EECore& cpu, CPUInstruction inst);
    void div(EECore& cpu, CPUInstruction inst);
    void mfhi(EECore& cpu, CPUInstruction inst);
    void bgtz(EECore& cpu, CPUInstruction inst);
    void sh(EECore& cpu, CPUInstruction inst);
    void divu1(EECore& cpu, CPUInstruction inst);
    void mflo1(EECore& cpu, CPUInstruction inst);
    void dsrav(EECore& cpu, CPUInstruction inst);
    void dsll32(EECore& cpu, CPUInstruction inst);
    void dsra32(EECore& cpu, CPUInstruction inst);
    void xori(EECore& cpu, CPUInstruction inst);
    void mult1(EECore& cpu, CPUInstruction inst);
    void movz(EECore& cpu, CPUInstruction inst);
    void dsllv(EECore& cpu, CPUInstruction inst);
    void daddiu(EECore& cpu, CPUInstruction inst);
    void sq(EECore& cpu, CPUInstruction inst);
    void lq(EECore& cpu, CPUInstruction inst);
    void lh(EECore& cpu, CPUInstruction inst);
    void por(EECore& cpu, CPUInstruction inst);
    void cache(EECore& cpu, CPUInstruction inst);
    void sllv(EECore& cpu, CPUInstruction inst);
    void dsll(EECore& cpu, CPUInstruction inst);
    void srav(EECore& cpu, CPUInstruction inst);
    void nor(EECore& cpu, CPUInstruction inst);
    void cfc2(EECore& cpu, CPUInstruction inst);
    void ctc2(EECore& cpu, CPUInstruction inst);
    void lwu(EECore& cpu, CPUInstruction inst);
    void ldl(EECore& cpu, CPUInstruction inst);
    void ldr(EECore& cpu, CPUInstruction inst);
    void sdl(EECore& cpu, CPUInstruction inst);
    void sdr(EECore& cpu, CPUInstruction inst);
    void dsrl(EECore& cpu, CPUInstruction inst);
    void srlv(EECore& cpu, CPUInstruction inst);
    void dsrl32(EECore& cpu, CPUInstruction inst);
    void padduw(EECore& cpu, CPUInstruction inst);
    void di(EECore& cpu, CPUInstruction inst);
    void eret(EECore& cpu, CPUInstruction inst);
    void syscall_exception(EECore& cpu, CPUInstruction inst);
    void bltzl(EECore& cpu, CPUInstruction inst);
    void ei(EECore& cpu, CPUInstruction inst);
    void COP1Instruction(EECore& cpu, CPUInstruction inst);
    void COP2Instruction(EECore& cpu, CPUInstruction inst);
    void RegImmInstruction(EECore& cpu, CPUInstruction inst);
    void MMIInstruction(EECore& cpu, CPUInstruction inst);
    void unknown_instruction(EECore& cpu, CPUInstruction inst);
}